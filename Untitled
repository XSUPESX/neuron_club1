{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOIgxqRD6knS2ZPrvykYTGL"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":92},"id":"8QMglNOMaQAN","executionInfo":{"status":"ok","timestamp":1726491262525,"user_tz":-330,"elapsed":14526,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"c829d3db-2410-41ff-c8f8-f762e1e77825"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-4b4f8a35-3ab0-42e6-844b-9b606ae8b68a\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-4b4f8a35-3ab0-42e6-844b-9b606ae8b68a\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving kaggle.json to kaggle.json\n"]},{"output_type":"execute_result","data":{"text/plain":["{'kaggle.json': b'{\"username\":\"xsupex\",\"key\":\"2d60b5648d69d9e3e659c2116c435f5f\"}'}"]},"metadata":{},"execution_count":1}],"source":[" from google.colab import files\n"," files.upload()  # Click to select and upload the kaggle.json file"]},{"cell_type":"code","source":[" # Install the Kaggle package if not already installed\n"," !pip install -q kaggle"],"metadata":{"id":"qrwujeK5aeet","executionInfo":{"status":"ok","timestamp":1726491270634,"user_tz":-330,"elapsed":4856,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["#creating a kaggle folder\n","!mkdir ~/.kaggle"],"metadata":{"id":"WhZ2C2CIag5J","executionInfo":{"status":"ok","timestamp":1726491275731,"user_tz":-330,"elapsed":1546,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["#copying the file in the folder\n","!cp kaggle.json ~/.kaggle/"],"metadata":{"id":"XwPtEtFIahOZ","executionInfo":{"status":"ok","timestamp":1726491279988,"user_tz":-330,"elapsed":501,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["#permission for the jason to act\n","!chmod 600 ~/.kaggle/kaggle.json"],"metadata":{"id":"SNnCNeMVape4","executionInfo":{"status":"ok","timestamp":1726491283898,"user_tz":-330,"elapsed":6,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["#to list all datasets in kaggle\n","!kaggle datasets list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vv2Vr7Beapj2","executionInfo":{"status":"ok","timestamp":1726491288364,"user_tz":-330,"elapsed":1757,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"f9b32a5a-1e85-48b9-c500-87a86609be55"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["ref                                                              title                                                size  lastUpdated          downloadCount  voteCount  usabilityRating  \n","---------------------------------------------------------------  --------------------------------------------------  -----  -------------------  -------------  ---------  ---------------  \n","lainguyn123/student-performance-factors                          Student Performance Factors                          94KB  2024-09-02 10:53:57           6857        152  1.0              \n","hanaksoy/customer-purchasing-behaviors                           Customer Purchasing Behaviors                         1KB  2024-09-01 22:18:07           3961         55  1.0              \n","haseebindata/student-performance-predictions                     Student Performance Predictions                       9KB  2024-08-17 06:57:57          11934        257  0.9411765        \n","abdullah0a/retail-sales-data-with-seasonal-trends-and-marketing  Retail Sales Data with Seasonal Trends & Marketing  320KB  2024-09-09 07:02:46           2026         41  1.0              \n","computingvictor/2024-academic-ranking-of-world-universities      🥇 Top Universities Ranking 2024                      19KB  2024-08-20 11:54:54           2068         40  1.0              \n","muhammadehsan02/126-years-of-historical-olympic-dataset          126 Years of Historical Olympic Dataset              27MB  2024-08-27 12:51:57           1882         46  1.0              \n","uom190346a/ai-powered-job-market-insights                        AI-Powered Job Market Insights                       10KB  2024-08-26 05:55:43           4374         84  1.0              \n","waqi786/climate-change-impact-on-agriculture                     🌍 Climate Change Impact on Agriculture 🌱            327KB  2024-09-06 13:25:59           2086         42  1.0              \n","waqi786/sustainable-fashion-eco-friendly-trends                  🌿 Sustainable Fashion: Eco-Friendly Trends          149KB  2024-09-07 12:39:51            801         22  1.0              \n","muhammadehsan02/formula-1-world-championship-history-1950-2024   Formula 1 World Championship History (1950-2024)      6MB  2024-09-03 20:11:24           1414         32  1.0              \n","michaelmatta0/amazon-cell-phones-cleaned-scraped-data            Amazon Cell Phones Cleaned Scraped Data               2MB  2024-09-10 21:01:15            909         25  1.0              \n","ironwolf404/laptop-price-dataset                                 Laptop Price - dataset                               25KB  2024-09-02 18:11:19           1277         23  1.0              \n","abdullah0a/human-age-prediction-synthetic-dataset                Human Age Prediction Synthetic Dataset              739KB  2024-09-04 07:25:39           2165         35  1.0              \n","thebumpkin/300-world-music-tracks-with-spotify-data              300 World Music Tracks (with Spotify Data)           19KB  2024-08-25 13:05:14           1667         26  1.0              \n","mbsoroush/google-dataset                                         Google Dataset                                       29KB  2024-09-06 03:09:40            361         23  1.0              \n","novandraanugrah/bitcoin-historical-datasets-2018-2024            BITCOIN Historical Datasets 2018-2024                17MB  2024-09-09 01:19:56           1105         36  1.0              \n","jocelyndumlao/chatbots-impact-on-university-learning             Chatbots'  Impact on University Learning            599KB  2024-09-02 09:51:49            694         24  0.9411765        \n","stefanydeoliveira/summer-olympics-medals-1896-2024               Summer Olympics Medals (1896-2024)                    4MB  2024-08-29 23:52:10           2348         46  1.0              \n","waqi786/most-used-beauty-cosmetics-products-in-the-world         💄 Top Beauty & Cosmetics Products Worldwide 2024    315KB  2024-09-09 06:22:19            930         28  1.0              \n","abdullah0a/urban-air-quality-and-health-impact-dataset           Urban Air Quality and Health Impact Analysis        254KB  2024-09-07 18:29:41           1269         25  1.0              \n"]}]},{"cell_type":"code","source":["!kaggle datasets download -d ironwolf404/laptop-price-dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HQkK7K1JauKM","executionInfo":{"status":"ok","timestamp":1726491291583,"user_tz":-330,"elapsed":1188,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"33d034c6-70e7-43cd-c4f2-267e21818b01"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Dataset URL: https://www.kaggle.com/datasets/ironwolf404/laptop-price-dataset\n","License(s): apache-2.0\n","Downloading laptop-price-dataset.zip to /content\n","  0% 0.00/24.5k [00:00<?, ?B/s]\n","100% 24.5k/24.5k [00:00<00:00, 38.1MB/s]\n"]}]},{"cell_type":"code","source":[" # List the files in the current directory to identify the ZIP file\n"," !ls"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J6Q4iI1ObOUz","executionInfo":{"status":"ok","timestamp":1726491309866,"user_tz":-330,"elapsed":615,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"902dc501-729a-4ab9-ca1c-505d0c9ab047"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["kaggle.json  laptop-price-dataset.zip  sample_data\n"]}]},{"cell_type":"code","source":[" # Replace 'titanic.zip' with the actual ZIP filename if different\n"," !unzip laptop-price-dataset.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"of_YKCr2bWdr","executionInfo":{"status":"ok","timestamp":1726491313812,"user_tz":-330,"elapsed":609,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"56fefdbd-e992-4242-a122-749640f94f32"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Archive:  laptop-price-dataset.zip\n","  inflating: laptop_price - dataset.csv  \n"]}]},{"cell_type":"code","source":[" import pandas as pd\n"," # Replace 'train.csv' with the actual filename\n"," df = pd.read_csv('laptop_price - dataset.csv')\n"," # Display the first few rows of the dataframe\n"," df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"-CTG48UdblZf","executionInfo":{"status":"ok","timestamp":1726491354590,"user_tz":-330,"elapsed":963,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"8506b512-05cc-4b23-fd7e-d7a72da8d77c"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Company      Product   TypeName  Inches                    ScreenResolution  \\\n","0   Apple  MacBook Pro  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n","1   Apple  Macbook Air  Ultrabook    13.3                            1440x900   \n","2      HP       250 G6   Notebook    15.6                   Full HD 1920x1080   \n","3   Apple  MacBook Pro  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n","4   Apple  MacBook Pro  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n","\n","  CPU_Company       CPU_Type  CPU_Frequency (GHz)  RAM (GB)  \\\n","0       Intel        Core i5                  2.3         8   \n","1       Intel        Core i5                  1.8         8   \n","2       Intel  Core i5 7200U                  2.5         8   \n","3       Intel        Core i7                  2.7        16   \n","4       Intel        Core i5                  3.1         8   \n","\n","                Memory GPU_Company                GPU_Type  OpSys  \\\n","0            128GB SSD       Intel  Iris Plus Graphics 640  macOS   \n","1  128GB Flash Storage       Intel        HD Graphics 6000  macOS   \n","2            256GB SSD       Intel         HD Graphics 620  No OS   \n","3            512GB SSD         AMD          Radeon Pro 455  macOS   \n","4            256GB SSD       Intel  Iris Plus Graphics 650  macOS   \n","\n","   Weight (kg)  Price (Euro)  \n","0         1.37       1339.69  \n","1         1.34        898.94  \n","2         1.86        575.00  \n","3         1.83       2537.45  \n","4         1.37       1803.60  "],"text/html":["\n","  <div id=\"df-ac34f216-1433-48de-893f-22cbd68e2657\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Company</th>\n","      <th>Product</th>\n","      <th>TypeName</th>\n","      <th>Inches</th>\n","      <th>ScreenResolution</th>\n","      <th>CPU_Company</th>\n","      <th>CPU_Type</th>\n","      <th>CPU_Frequency (GHz)</th>\n","      <th>RAM (GB)</th>\n","      <th>Memory</th>\n","      <th>GPU_Company</th>\n","      <th>GPU_Type</th>\n","      <th>OpSys</th>\n","      <th>Weight (kg)</th>\n","      <th>Price (Euro)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel</td>\n","      <td>Core i5</td>\n","      <td>2.3</td>\n","      <td>8</td>\n","      <td>128GB SSD</td>\n","      <td>Intel</td>\n","      <td>Iris Plus Graphics 640</td>\n","      <td>macOS</td>\n","      <td>1.37</td>\n","      <td>1339.69</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Apple</td>\n","      <td>Macbook Air</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>1440x900</td>\n","      <td>Intel</td>\n","      <td>Core i5</td>\n","      <td>1.8</td>\n","      <td>8</td>\n","      <td>128GB Flash Storage</td>\n","      <td>Intel</td>\n","      <td>HD Graphics 6000</td>\n","      <td>macOS</td>\n","      <td>1.34</td>\n","      <td>898.94</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>HP</td>\n","      <td>250 G6</td>\n","      <td>Notebook</td>\n","      <td>15.6</td>\n","      <td>Full HD 1920x1080</td>\n","      <td>Intel</td>\n","      <td>Core i5 7200U</td>\n","      <td>2.5</td>\n","      <td>8</td>\n","      <td>256GB SSD</td>\n","      <td>Intel</td>\n","      <td>HD Graphics 620</td>\n","      <td>No OS</td>\n","      <td>1.86</td>\n","      <td>575.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>15.4</td>\n","      <td>IPS Panel Retina Display 2880x1800</td>\n","      <td>Intel</td>\n","      <td>Core i7</td>\n","      <td>2.7</td>\n","      <td>16</td>\n","      <td>512GB SSD</td>\n","      <td>AMD</td>\n","      <td>Radeon Pro 455</td>\n","      <td>macOS</td>\n","      <td>1.83</td>\n","      <td>2537.45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Apple</td>\n","      <td>MacBook Pro</td>\n","      <td>Ultrabook</td>\n","      <td>13.3</td>\n","      <td>IPS Panel Retina Display 2560x1600</td>\n","      <td>Intel</td>\n","      <td>Core i5</td>\n","      <td>3.1</td>\n","      <td>8</td>\n","      <td>256GB SSD</td>\n","      <td>Intel</td>\n","      <td>Iris Plus Graphics 650</td>\n","      <td>macOS</td>\n","      <td>1.37</td>\n","      <td>1803.60</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ac34f216-1433-48de-893f-22cbd68e2657')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ac34f216-1433-48de-893f-22cbd68e2657 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ac34f216-1433-48de-893f-22cbd68e2657');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c1f854f9-4223-4bce-bfbd-f25a4055ac41\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1f854f9-4223-4bce-bfbd-f25a4055ac41')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c1f854f9-4223-4bce-bfbd-f25a4055ac41 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 1275,\n  \"fields\": [\n    {\n      \"column\": \"Company\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 19,\n        \"samples\": [\n          \"Apple\",\n          \"Lenovo\",\n          \"Xiaomi\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 618,\n        \"samples\": [\n          \"GL72M 7RDX\",\n          \"GS73VR 7RF\",\n          \"E402WA-GA007T (E2-6110/4GB/64GB/W10\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TypeName\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"Ultrabook\",\n          \"Notebook\",\n          \"Workstation\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inches\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4294698446247827,\n        \"min\": 10.1,\n        \"max\": 18.4,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          13.3,\n          15.6,\n          13.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ScreenResolution\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 40,\n        \"samples\": [\n          \"IPS Panel 4K Ultra HD 3840x2160\",\n          \"4K Ultra HD / Touchscreen 3840x2160\",\n          \"IPS Panel Full HD 2160x1440\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPU_Company\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Intel\",\n          \"AMD\",\n          \"Samsung\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPU_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 93,\n        \"samples\": [\n          \"Core i7 7820HQ\",\n          \"Atom x5-Z8550\",\n          \"Core M m3-7Y30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CPU_Frequency (GHz)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5038457085709592,\n        \"min\": 0.9,\n        \"max\": 3.6,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          2.0,\n          1.1,\n          2.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RAM (GB)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 2,\n        \"max\": 64,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          24,\n          16,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Memory\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 39,\n        \"samples\": [\n          \"240GB SSD\",\n          \"1.0TB HDD\",\n          \"500GB HDD\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPU_Company\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"AMD\",\n          \"ARM\",\n          \"Intel\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GPU_Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 106,\n        \"samples\": [\n          \"Radeon R5 M315\",\n          \"Radeon Pro 555\",\n          \"Iris Plus Graphics 650\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"OpSys\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"Chrome OS\",\n          \"No OS\",\n          \"Android\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight (kg)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6691959759708275,\n        \"min\": 0.69,\n        \"max\": 4.7,\n        \"num_unique_values\": 171,\n        \"samples\": [\n          2.6,\n          2.05,\n          1.32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Price (Euro)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 700.7525041749288,\n        \"min\": 174.0,\n        \"max\": 6099.0,\n        \"num_unique_values\": 791,\n        \"samples\": [\n          1292.0,\n          389.0,\n          1798.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DaFtTcqax1ap","executionInfo":{"status":"ok","timestamp":1726491358990,"user_tz":-330,"elapsed":772,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"4eba13ac-1649-4eca-b190-8653cb2ee360"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1275, 15)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":[" from google.colab import drive\n"," drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"902fOkvidV-b","executionInfo":{"status":"ok","timestamp":1726491495237,"user_tz":-330,"elapsed":27375,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"cc1dcb12-c451-41a9-e9ca-b05d4a18709a"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":[" # Copy all unzipped files to a folder in Google Drive\n"," !cp -r path_to_unzipped_files /content/drive/MyDrive/Colab Notebooks"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bNawkT30d5cC","executionInfo":{"status":"ok","timestamp":1726491770606,"user_tz":-330,"elapsed":614,"user":{"displayName":"AHAON SARKAR 2462019","userId":"09520486592556941458"}},"outputId":"0a9f267c-d394-4ece-dd04-c50b61adc887"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["cp: target 'Notebooks' is not a directory\n"]}]}]}